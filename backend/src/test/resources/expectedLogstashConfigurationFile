input {
	file {
		type => "app1"
		path => "/logs/app1.log"
		codec => multiline {
			pattern => "^%{TIMESTAMP_ISO8601:timestamp}"
			negate => "true"
			what => "previous"
			auto_flush_interval => 1
			}
		sincedb_path => "/sincedb/1"
	}
	file {
		type => "app2"
		path => "/logs/app2.log"
		codec => multiline {
			pattern => "^%{TIMESTAMP_ISO8601:timestamp}"
			negate => "true"
			what => "previous"
			auto_flush_interval => 1
			}
		sincedb_path => "/sincedb/2"
	}
}
filter {
   grok {
      match => [ "message", "(?m)%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)"]
    }

    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    }
}
output {
    if [level] in ["WARN","ERROR"] {
      stdout {
          codec => rubydebug
      }

      elasticsearch {
          hosts => "elasticsearch:9200"
      }
    }
}
